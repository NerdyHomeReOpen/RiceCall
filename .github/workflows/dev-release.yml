name: Release Dev Latest

on:
  push:
    tags: ['[0-9]+.[0-9]+.[0-9]+-dev.*']

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            build_name: win-x64
            args: '--win --x64'
          - os: windows-latest
            build_name: win-ia32
            args: '--win --ia32'

          - os: macos-13
            build_name: mac-x64
            args: '--mac --x64'
          - os: macos-14
            build_name: mac-arm64
            args: '--mac --arm64'

          - os: ubuntu-latest
            build_name: linux-x64
            args: '--linux --x64'

    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: py
        with:
          python-version: '3.11'

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: 20, cache: yarn }

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Make .env file
        run: |
          echo "API_URL=${{ secrets.API_URL }}" > .env
          echo "WS_URL=${{ secrets.WS_URL }}" >> .env
          echo "CROWDIN_DISTRIBUTION_HASH=${{ secrets.CROWDIN_DISTRIBUTION_HASH }}" >> .env
          echo "UPDATE_CHANNEL=dev" >> .env

      - name: Build electron
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: false
          build_script_name: build:action
          args: ${{ matrix.args }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build_name }}
          path: |
            dist/*.dmg
            dist/*.zip
            dist/*.blockmap
            dist/*Setup.exe
            dist/*Setup.exe.blockmap
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*latest*.yml

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: { path: dist }

      - name: Publish rolling prerelease
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Dev Release ${{ github.ref_name }}
          body: |
            ## 該版本為開發版本

            :warning: 所有以 `-dev.xxxxxxxx` 結尾的版本皆為開發中版本，開發中版本所使用的伺服器獨立於正式版所使用之伺服器，帳號亦不通用

            若要下載最新版本，請點擊下方連接:
            > https://github.com/NerdyHomeReOpen/RiceCall/releases/latest

            若你接受**需要重建帳號並且隨時會清除所有資料的風險**，並想了解最新開發進度，方可下載並使用

            另提醒，下載測試版本將會**強制刪除正式版本**，請斟酌考慮後再進行下載

            ---

            ## This Version is a Dev Build

            :warning: All versions ending with `-dev.xxxxxxxx` are development builds.  
            Development builds use servers that are independent from the official release servers, and accounts are not shared between them.  

            To download the latest version, please visit:  
            > https://github.com/NerdyHomeReOpen/RiceCall/releases/latest  

            If you accept the **risk of needing to recreate your account and having all data wiped at any time**, and wish to follow the latest development progress, you may download and use these builds.  

            Please note: Installing a test build will **forcefully remove the official release version**. Consider carefully before proceeding.
          commit: ${{ github.sha }}
          prerelease: true
          allowUpdates: true
          replacesArtifacts: true
          removeArtifacts: true
          omitBodyDuringUpdate: true
          artifacts: 'dist/**'
          token: ${{ secrets.GITHUB_TOKEN }}
