import { User, Channel, Server, Member, Friend, FriendGroup, FriendApplication, MemberApplication, MemberInvitation } from '@/types';

const Default = {
  user: (overrides: Partial<User> = {}): User => ({
    userId: '',
    name: '',
    displayId: '',
    avatar: `${Date.now()}`,
    avatarUrl: `/default/userAvatar.webp`,
    signature: '',
    about: '',
    status: 'online',
    gender: 'Male',
    country: 'taiwan',
    level: 0,
    vip: 0,
    vxp: 0,
    xp: 0,
    requiredXp: 0,
    birthYear: new Date().getFullYear() - 20,
    birthMonth: 1,
    birthDay: 1,
    isVerified: false,
    permissionLevel: 1,
    currentChannelId: null,
    currentServerId: null,
    lastActiveAt: 0,
    createdAt: 0,
    badges: '[]',
    ...overrides,
  }),

  friend: (overrides: Partial<Friend> = {}): Friend => ({
    ...Default.user(),
    userId: '',
    targetId: '',
    note: '',
    relationStatus: 0,
    isBlocked: false,
    friendGroupId: '',
    createdAt: 0,
    ...overrides,
  }),

  friendGroup: (overrides: Partial<FriendGroup> = {}): FriendGroup => ({
    friendGroupId: '',
    name: '',
    order: 0,
    userId: '',
    createdAt: 0,
    ...overrides,
  }),

  friendApplication: (overrides: Partial<FriendApplication> = {}): FriendApplication => ({
    ...Default.user(),
    senderId: '',
    receiverId: '',
    description: '',
    createdAt: 0,
    ...overrides,
  }),

  server: (overrides: Partial<Server> = {}): Server => ({
    userId: '',
    serverId: '',
    name: '',
    nickname: null,
    avatar: `${Date.now()}`,
    avatarUrl: `/default/serverAvatar.webp`,
    announcement: '',
    applyNotice: '',
    description: '',
    displayId: '',
    slogan: '',
    type: 'other',
    visibility: 'public',
    level: 0,
    wealth: 0,
    contribution: 0,
    permissionLevel: 1,
    receiveApply: true,
    recent: false,
    owned: false,
    favorite: false,
    isVerified: false,
    lobbyId: '',
    receptionLobbyId: null,
    ownerId: '',
    timestamp: 0,
    lastJoinChannelAt: 0,
    createdAt: 0,
    ...overrides,
  }),

  channel: (overrides: Partial<Channel> = {}): Channel => ({
    channelId: '',
    userId: '',
    name: '',
    announcement: '',
    password: '',
    order: 0,
    bitrate: 64000,
    userLimit: 0,
    queueTime: 300,
    permissionLevel: 1,
    guestTextGapTime: 0,
    guestTextWaitTime: 0,
    guestTextMaxLength: 2000,
    isLobby: false,
    isTextMuted: false,
    isVoiceMuted: false,
    forbidText: false,
    forbidQueue: false,
    forbidGuestText: false,
    forbidGuestVoice: false,
    forbidGuestQueue: false,
    forbidGuestUrl: false,
    type: 'channel',
    visibility: 'public',
    voiceMode: 'free',
    serverId: '',
    categoryId: null,
    createdAt: 0,
    ...overrides,
  }),

  member: (overrides: Partial<Member> = {}): Member => ({
    ...Default.user(),
    userId: '',
    serverId: '',
    nickname: null,
    contribution: 0,
    blockedUntil: 0,
    lastJoinChannelAt: 0,
    createdAt: 0,
    ...overrides,
  }),

  memberApplication: (overrides: Partial<MemberApplication> = {}): MemberApplication => ({
    ...Default.user(),
    serverId: '',
    description: '',
    createdAt: 0,
    ...overrides,
  }),

  memberInvitation: (overrides: Partial<MemberInvitation> = {}): MemberInvitation => ({
    ...Default.user(),
    receiverId: '',
    serverId: '',
    description: '',
    createdAt: 0,
    ...overrides,
  }),
};

export default Default;
